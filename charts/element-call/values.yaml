# Default values for element_call.

imagePullSecrets: []

# Livekit specific global settings

## THESE MUST BE CHANGED!
## THESE ALSO MUST BE DEFINED AT `.livekit-server.livekit.keys`!
livekit_key: devkey
livekit_secret: secret

element_call:
  replicaCount: 1

  config:
    eula: https://example.com
    homeserver:
      base_url: "https://call.localhost"
      server_name: "call.localhost"

  image:
    repository: ghcr.io/element-hq/element-call
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

livekit_mgmt:
  replicaCount: 1

  image:
    repository: ghcr.io/element-hq/lk-jwt-service
    pullPolicy: IfNotPresent
    tag: "latest-ci"
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

livekit-server:
  enabled: true
  # See https://github.com/livekit/livekit-helm/blob/master/livekit-server/values.yaml for values

  livekit:
    port: 7880
    bind_addresses:
      - "0.0.0.0"
    rtc:
      tcp_port: 7881
      port_range_start: 50100
      port_range_end: 50200
      use_external_ip: false
    redis:
      address: changeme
      db: 0
      password: changeme
    turn:
      enabled: false
      domain: localhost
      cert_file: ""
      key_file: ""
      tls_port: 5349
      udp_port: 443
      external_tls: true
    # Changeme. Values are `key: secret``
    keys: {}
    signal_relay:
      enabled: true

egress:
  enabled: true
  egress:
    # CHANGE ME
    api_key: devkey
    api_secret: secret
    ws_url: changeme
    insecure: true
    redis:
      address: must be the same redis address used by your livekit server
      password: redis password
      db: redis db

redis:
  enabled: true
  architecture: standalone
